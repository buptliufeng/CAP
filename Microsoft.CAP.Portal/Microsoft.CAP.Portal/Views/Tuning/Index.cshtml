@{
    ViewBag.Title = "CAP-Tuning";

    if (ViewBag.LoadEngineError != null)
    {
        <script>
            var loadEngineError = @Html.Raw(Json.Encode(ViewBag.LoadEngineError));//use Html.Raw() to prevent html-encoding
            alert(loadEngineError.StatusCode + "\n" + loadEngineError.ErrorMessage);
        </script>
    }
}

<link rel="stylesheet" type="text/css" href="~/Content/custom.css">

<div class="alert alert-info" style="margin:15px">
    <h4>Usage: Tune param of currently detected streams in CAP</h4>
</div>

<div class="row" style="margin:15px">
    <div class="panel panel-info">
        <div class="panel-body form-horizontal">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-12 form-inline">
                            <label for="stream-id">Stream:</label>
                            <input class="form-control" id="stream-id" type="text" />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-12 form-inline">
                            <label for="from-datepicker">From:</label>
                            <input class="form-control" id="from-datepicker" type="text" />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-12 form-inline">
                            <label for="to-datepicker">To:</label>
                            <input class="form-control" id="to-datepicker" type="text" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" id="stream-info" style="display:none">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-12 form-inline">
                            <label for="data-type">DataType:</label>
                            <input class="form-control" id="data-type" readonly="readonly" />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-12 form-inline">
                            <label for="interval-seconds">DataIntervalSeconds:</label>
                            <input class="form-control" id="interval-seconds" type="text" readonly="readonly" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--get history result-->
<div class="row vertical-center-align" style="margin:15px">
    <div class="col-md-8" style="min-height:450px">
        <div class="loading-icon" id="detection-history-loader" style="display:none"></div>
        <div id="detection-history-chart"></div>
    </div>

    <div class="col-md-4">
        <div class="panel panel-primary">
            <div class="panel-body form-horizontal">
                <div class="form-group">
                    <label class="col-xs-4 control-label" style="text-align:left" for="engine-id">Engine:</label>
                    <div class="col-xs-8">
                        <select class="form-control" id="engine-id">
                            <option value="any">any</option>
                            @{
                                foreach (var engine in ViewBag.AnomalyEngines)
                                {
                                    <option value="@engine.EngineId">@engine.Description</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <button class="btn btn-primary col-xs-offset-2 col-xs-8" id="btn-get-history" style="margin-bottom:15px">Get History Result</button>
                <div id="parameters-in-system"></div>
            </div>
        </div>
    </div>
</div>
<hr />

<!--tuning-->
<div class="row vertical-center-align" style="margin:15px">
    <div class="col-md-8" style="min-height:450px">
        <div class="loading-icon" id="tuning-result-loader" style="display:none"></div>
        <div id="tuning-result-chart"></div>
    </div>

    <div class="col-md-4">
        <div class="panel panel-success">
            <div class="panel-heading" style="text-align:center">Tuning</div>
            <div class="panel-body form-horizontal">
                <div class="form-group" style="display:none">
                    <label class="col-xs-4 control-label" style="text-align:left" for="tune-engine-id">Engine:</label>
                    <div class="col-xs-8">
                        <select class="form-control" id="tune-engine-id">
                            @{
                                foreach (var engine in ViewBag.AnomalyEngines)
                                {
                                    <option value="@engine.EngineId">@engine.Description</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <!--to append parameters-->
                <div id="parameters-for-tuning"></div>

                <button class="btn btn-success col-xs-offset-2 col-xs-8" id="btn-tune" style="margin-bottom:35px" disabled="disabled">Tune</button>
                <button class="btn btn-warning col-xs-offset-2 col-xs-8" id="btn-save" disabled="disabled">Save</button>
            </div>
            <!--to show success info-->
            <div id="save-success-text" style="text-align:center;font-size:small"></div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/chart-helper.js"></script>
    <script src="~/Scripts/home-button-click-handler.js"></script>
    <script>
        var tuningUrl = @Html.Raw(Json.Encode(ViewBag.TuningUrl));

        $(document).ready(function () {
            //default:yesterday
            var date = new Date();
            date.setDate(date.getDate() - 1);
            var yesterdayString = (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();

            $("#from-datepicker").val(yesterdayString);
            $("#to-datepicker").val(yesterdayString);

            var formatOfDate = "mm/dd/yy";
            $("#from-datepicker").datepicker({
                minDate: "-1Y",
                maxDate: 0,
                dateFormat: formatOfDate
            });
            $("#to-datepicker").datepicker({
                minDate: "-1Y",
                maxDate: 0,
                dateFormat: formatOfDate
            });

            $("#detection-history-chart").kendoStockChart(createChartParams("Detection Result", null, null));
            $("#tuning-result-chart").kendoStockChart(createChartParams("Tuning Result", null, null));
        });

        //refresh when the window size change
        $(window).on("resize", function () {
            var hisChart = $("#detection-history-chart").data("kendoStockChart");
            if (hisChart != null) {
                hisChart.refresh();
            }
            var tuneChart = $("#tuning-result-chart").data("kendoStockChart");
            if (tuneChart != null) {
                tuneChart.refresh();
            }
        });

        $("#btn-get-history").on("click", onGetClicked);
        $("#btn-tune").on("click", onTuneClicked);
        $("#btn-save").on("click", onSaveClicked);
    </script>
}